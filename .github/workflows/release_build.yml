name: Release Build

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        if [ "${{ runner.os }}" == "macOS" ]; then
          brew install create-dmg
        fi
      shell: bash
    
    - name: Get version from tag
      id: get_version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      shell: bash
    
    - name: Set build variables
      shell: bash
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          echo "PYINSTALLER_SEP=;" >> $GITHUB_ENV
          echo "PYINSTALLER_ADD_DATA_FORMAT=--add-data" >> $GITHUB_ENV
        else
          echo "PYINSTALLER_SEP=:" >> $GITHUB_ENV
          echo "PYINSTALLER_ADD_DATA_FORMAT=--add-data=" >> $GITHUB_ENV
        fi
    
    - name: Build Application
      shell: bash
      run: |
        echo "============ Build Environment ============"
        echo "Platform: ${{ matrix.platform }}"
        echo "OS: ${{ runner.os }}"
        echo "Python: ${{ env.pythonLocation }}"
        echo "Working directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "========================================="
        python scripts/build.py --platform ${{ matrix.platform }} --type all
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/**/jvman-${{ env.version }}-windows-setup.exe
          release/**/jvman-${{ env.version }}-windows.zip
          release/**/jvman-${{ env.version }}-macos-setup.dmg
          release/**/jvman-${{ env.version }}-macos.zip
          release/**/jvman-${{ env.version }}-linux-setup.deb
          release/**/jvman-${{ env.version }}-linux.zip
          release/**/release.json
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 